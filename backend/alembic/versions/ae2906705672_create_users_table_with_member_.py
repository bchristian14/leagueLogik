"""Create users table with member management fields

Revision ID: ae2906705672
Revises: 46d1b9a8c4ee
Create Date: 2025-09-18 15:29:46.505339

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ae2906705672'
down_revision: Union[str, Sequence[str], None] = '46d1b9a8c4ee'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('member_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('member_status', sa.Enum('ACTIVE', 'INACTIVE', name='memberstatus'), nullable=False),
    sa.Column('member_type', sa.Enum('CANDIDATE', 'FULL', 'LIFETIME', name='membertype'), nullable=False),
    sa.Column('admin_roles', sa.Enum('ADMIN', 'TREASURER', 'COURSE_COORDINATOR', 'TOURNAMENT_COORDINATOR', name='adminrole'), nullable=True),
    sa.Column('GHIN_id', sa.String(length=20), nullable=True),
    sa.Column('member_balance', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('signup_date', sa.Date(), nullable=False),
    sa.Column('AGA_membership_expiry', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('member_balance >= -500.00', name='check_member_balance_limit'),
    sa.PrimaryKeyConstraint('member_id')
    )
    op.create_index('idx_users_GHIN_id', 'users', ['GHIN_id'], unique=False)
    op.create_index('idx_users_created_at', 'users', ['created_at'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_member_status', 'users', ['member_status'], unique=False)
    op.create_index('idx_users_member_type', 'users', ['member_type'], unique=False)
    op.create_index('idx_users_name_search', 'users', ['last_name', 'first_name'], unique=False)
    op.create_index('idx_users_signup_date', 'users', ['signup_date'], unique=False)
    op.create_index('idx_users_status_type', 'users', ['member_status', 'member_type'], unique=False)
    op.create_index(op.f('ix_users_GHIN_id'), 'users', ['GHIN_id'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_member_id'), 'users', ['member_id'], unique=False)
    op.create_index(op.f('ix_users_member_status'), 'users', ['member_status'], unique=False)
    op.create_index(op.f('ix_users_member_type'), 'users', ['member_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_member_type'), table_name='users')
    op.drop_index(op.f('ix_users_member_status'), table_name='users')
    op.drop_index(op.f('ix_users_member_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_GHIN_id'), table_name='users')
    op.drop_index('idx_users_status_type', table_name='users')
    op.drop_index('idx_users_signup_date', table_name='users')
    op.drop_index('idx_users_name_search', table_name='users')
    op.drop_index('idx_users_member_type', table_name='users')
    op.drop_index('idx_users_member_status', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_index('idx_users_created_at', table_name='users')
    op.drop_index('idx_users_GHIN_id', table_name='users')
    op.drop_table('users')

    # Clean up enum types to allow proper migration rollback
    op.execute('DROP TYPE IF EXISTS adminrole CASCADE')
    op.execute('DROP TYPE IF EXISTS membertype CASCADE')
    op.execute('DROP TYPE IF EXISTS memberstatus CASCADE')
    # ### end Alembic commands ###
